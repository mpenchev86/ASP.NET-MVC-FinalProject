@using MvcProject.Web.Infrastructure.HtmlHelpers
@using MvcProject.Web.Areas.Common.ViewModels.Kendo

@(Html.FullFeaturedGrid<KendoTestViewModel>(
    "Grid",
    m => m.Id,
    3,
    c =>
    {
        c.Bound(m => m.Id);
        c.Bound(m => m.Name);
        c.Bound(m => m.CreatedOn)
            .Format("{0:dd/MM/yyyy}")
            //.Title("Registration Date")
            //.Hidden()
            ;
        c.Bound(m => m.Country);
        c.Command(cm =>
        {
            cm.Edit().UpdateText("Save");
            cm.Destroy().Text("Delete");
        })
        .Width(165)
        //.Hidden()
        ;
    })
    .Deferred())

@section Scripts{
    @(Html.Kendo().DeferredScripts())

    <script>
        kendo.culture('@BundleConfig.UiCulture');
        $(function () {
            $("#grid").kendoValidator();
        });
    </script>
}

@*<div>
    @(Html.Kendo()
        .Grid<KendoTestViewModel>()
        .Name("grid")
        .Columns(c =>
        {
            c.Bound(m => m.Id);
            c.Bound(m => m.Name);
            c.Bound(m => m.CreatedOn)
                .Format("{0:dd/MM/yyyy}")
                //.Title("Registration Date")
                //.Hidden()
                ;
            c.Bound(m => m.Country);
            c.Command(cm =>
            {
                cm.Edit().UpdateText("Save");
                cm.Destroy().Text("Delete");
            })
            .Width(165)
            //.Hidden()
            ;
        })
        .ToolBar(t =>
        {
            t.Create().Text("Create");
        })
        //{
        //    t.Create().Text("Add new record");
        //}
        .Editable(e => e
            .Mode(GridEditMode.PopUp)
            .Window(w => w.Title(false)))
        //{
        //    e.Mode(GridEditMode.PopUp);
        //    e.Window(w =>
        //    {
        //        // If c.Command() is not hidden, this will affect Edit windows as well as Create window
        //        w.Title(false)/*.Title("Update")*/;
        //    });
        //}
        .ColumnMenu()
        .Pageable(page => page.Refresh(true))
        //.Sortable(s => s.SortMode(GridSortMode.MultipleColumn))
        //.Filterable(f =>
        //{
        //    f.Extra(false);
        //    //f.Mode(GridFilterMode.Row);
        //})
        //.Groupable()
        //.Navigatable()
        //.Resizable()
        //.Reorderable()
        //.Scrollable()
        //.Selectable()
        //.Mobile()
        .DataSource(data => data
            .Ajax()
            .PageSize(10)
            // Initial sort column
            .Sort(s => s.Add(vm => vm.Name).Ascending())
            // Mandatory if we edit/delete...
            .Model(m => m.Id(vm => vm.Id))
            // Where the grid gets its data from
            .Read(read => read.Action("Read", "Grid"))
            // t.Create() in Toolbar needs this
            .Create(create => create.Action("Create", "Grid"))
            // c.Command() in Columns() need this
            .Update(u => u.Action("Update", "Grid"))
            .Destroy(d => d.Action("Destroy", "Grid"))
        )
        .Deferred())
</div>*@
