@using Kendo.Mvc.UI;
@using Kendo.Mvc.Extensions;
@using MvcProject.Web.Areas.Admin.ViewModels.Properties
@model MvcProject.Web.Areas.Admin.ViewModels.Products.ProductViewModel

@{ 
    var description = Model.Description;
}

<div class="container-fluid">
    <div class="row">
        @Html.HiddenFor(m => m.Id)
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.ShortDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.ShortDescription)
            @Html.ValidationMessageFor(model => model.ShortDescription)
        </div>
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.DescriptionId, "Description Id")
        </div>
        <div class="editor-field">
            @Html.EditorFor(
                m => m.DescriptionId,
                new
                {
                    OptionLabel = "Select Description...",
                    DropDownName = "DescriptionId",
                    Text = "Id",
                    Value = "Id",
                    Action = "GetDataAsJson",
                    Controller = "Descriptions"
                })
            @Html.ValidationMessageFor(m => m.DescriptionId)
        </div>
    </div>

    @*<hr />
    <div class="row" style="text-align: center">
        @Html.LabelFor(m => m.Description)
    </div>
    <br />
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Description.Content)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Description.Content)
            @Html.ValidationMessageFor(m => m.Description.Content)
        </div>
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Description.Properties)
        </div>
        <div class="editor-field">
            @Html.EditorFor(
                m => m.Description.Properties,
                new
                {
                    htmlAttributes = new
                    {
                        data_bind = "value: Description.Properties",
                    }
                })
            @Html.ValidationMessageFor(model => model.Description.Properties)
        </div>
    </div>
    <hr />*@

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.CategoryId, "Category")
        </div>
        <div class="editor-field">
            @Html.EditorFor(
                m => m.CategoryId,
                new
                {
                    OptionLabel = "Select Category...",
                    DropDownName = "CategoryId",
                    Text = "Name",
                    Value = "Id",
                    Action = "GetDataAsJson",
                    Controller = "Categories"
                })
            @Html.ValidationMessageFor(m => m.CategoryId)
        </div>
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.MainImageId, "MainImage Id")
        </div>
        <div class="editor-field">
            @Html.EditorFor(
                m => m.MainImageId,
                new
                {
                    OptionLabel = "Select Main Image...",
                    DropDownName = "MainImageId",
                    Text = "Id",
                    Value = "Id",
                    Action = "GetDataAsJson",
                    Controller = "Images"
                })
            @Html.ValidationMessageFor(m => m.MainImageId)
        </div>
    </div>

    @*<form method="post" action='@Url.Action("Submit")'>
        <div class="demo-section k-content">*@
    
            @*@(Html.Kendo().Upload()
                .Name("mainImage")
                .Async(async => async
                    .Save("Save", "Home"))
            )*@

            @*<p style="padding-top: 1em; text-align: right">
                <input type="submit" value="Submit" class="k-button k-primary" />
            </p>
        </div>
    </form>*@

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.QuantityInStock)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.QuantityInStock)
            @Html.ValidationMessageFor(model => model.QuantityInStock)
        </div>
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.UnitPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.UnitPrice)
            @Html.ValidationMessageFor(model => model.UnitPrice)
        </div>
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.ShippingPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.ShippingPrice)
            @Html.ValidationMessageFor(model => model.ShippingPrice)
        </div>
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Length)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Length)
            @Html.ValidationMessageFor(model => model.Length)
        </div>
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Height)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Height)
            @Html.ValidationMessageFor(model => model.Height)
        </div>
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Width)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Width)
            @Html.ValidationMessageFor(model => model.Width)
        </div>
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Weight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Weight)
            @Html.ValidationMessageFor(model => model.Weight)
        </div>
    </div>

    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.IsDeleted, "Mark as deleted")
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.IsDeleted)
            @Html.ValidationMessageFor(model => model.IsDeleted)
        </div>
    </div>
</div>

@section styles{
    @*NOTHING LOADS HERE*@
}

@section Scripts{
    <script>
        @*NOTHING LOADS HERE*@
    </script>
}