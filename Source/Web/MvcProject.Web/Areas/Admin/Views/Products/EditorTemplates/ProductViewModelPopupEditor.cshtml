@using Kendo.Mvc.UI;
@using Kendo.Mvc.Extensions;
@model MvcProject.Web.Areas.Admin.ViewModels.Products.ProductViewModel

<div class="container-fluid">
    <div class="row">
        @Html.HiddenFor(m => m.Id)
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.ShortDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.ShortDescription)
            @Html.ValidationMessageFor(model => model.ShortDescription)
        </div>
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.CategoryId, "Category")
        </div>
        <div class="editor-field">
            @Html.EditorFor(
                m => m.CategoryId,
                new
                {
                    OptionLabel = "Select Category...",
                    DropDownName = "CategoryId",
                    Text = "Name",
                    Value = "Id",
                    Action = "GetDataAsJson",
                    Controller = "Categories"
                })
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>
    </div>
    <hr />

    @*<div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.DescriptionId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(
                m => m.DescriptionId,
                new
                {
                    OptionLabel = "Select Description...",
                    DropDownName = "DescriptionId",
                    Text = "Id",
                    Value = "Id",
                    Action = "GetDataAsJson",
                    Controller = "Descriptions"
                })
            @Html.ValidationMessageFor(model => model.DescriptionId)
        </div>
    </div>*@
    @Html.LabelFor(m => m.Description, new { text = "center" })
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Description.Content)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Description.Content)
            @Html.ValidationMessageFor(model => model.Description.Content)
        </div>
    </div>

    <hr />
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.QuantityInStock)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.QuantityInStock)
            @Html.ValidationMessageFor(model => model.QuantityInStock)
        </div>
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.UnitPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.UnitPrice)
            @Html.ValidationMessageFor(model => model.UnitPrice)
        </div>
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.ShippingPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.ShippingPrice)
            @Html.ValidationMessageFor(model => model.ShippingPrice)
        </div>
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Length)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Length)
            @Html.ValidationMessageFor(model => model.Length)
        </div>
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Height)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Height)
            @Html.ValidationMessageFor(model => model.Height)
        </div>
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Width)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Width)
            @Html.ValidationMessageFor(model => model.Width)
        </div>
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.Weight)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.Weight)
            @Html.ValidationMessageFor(model => model.Weight)
        </div>
    </div>
    <div class="row">
        <div class="editor-label">
            @Html.LabelFor(m => m.IsDeleted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(m => m.IsDeleted)
            @Html.ValidationMessageFor(model => model.IsDeleted)
        </div>
    </div>
    @*<div class="row">
            <div class="editor-label">
                @Html.LabelFor(m => m.DeletedOn)
            </div>
            <div class="editor-field">
                @Html.EditorFor(m => m.DeletedOn)
                @Html.ValidationMessageFor(model => model.DeletedOn)
            </div>
        </div>*@
</div>

@section styles{
    <link href="@Url.Content("~/Content/Custom/Admin/custom-popup-editor.css")" rel="stylesheet" type="text/css" />
}