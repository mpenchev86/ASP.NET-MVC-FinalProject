@using MvcProject.Web.Areas.Public.ViewModels.Orders

@model List<ShoppingCartItem>

@{ 
    var count = Model.Count();
}

<div class="row cart-labels">
    <div class="col-md-8"><label><span>Items</span></label></div>
    <div class="col-md-2"><label><span>Quantity</span></label></div>
    <div class="col-md-2"><label><span>Remove</span></label></div>
</div>

@for (int i = 0; i < count; i++)
{
    @Html.HiddenFor(m => Model[i].Product.Id)
    @Html.HiddenFor(m => Model[i].Product.ImageFileExtension)
    @Html.HiddenFor(m => Model[i].Product.ImageUrlPath)
    @Html.HiddenFor(m => Model[i].Product.ShippingPrice)
    @Html.HiddenFor(m => Model[i].Product.Title)
    @Html.HiddenFor(m => Model[i].Product.UnitPrice)
    <hr />
    <div class="row cart-item">
        <div class="col-md-8 cartitem-product">
            @Html.DisplayFor(m => Model[i].Product)
        </div>
        <div class="col-md-2 cartitem-quantity">
            @Html.EditorFor(m => Model[i].ProductQuantity)
        </div>
        <div class="col-md-2 cartitem-remove">
            <button type="button" class="close cart-item-remove" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @*@Html.CheckBoxFor(m => Model[i].ToDelete, new { @class = "cart-item-remove" })*@
            @*@Html.RadioButtonFor(m => Model[i].ToDelete, "&times;", new { type = "button", @class = "close cart-item-remove" })*@
        </div>
    </div>
}