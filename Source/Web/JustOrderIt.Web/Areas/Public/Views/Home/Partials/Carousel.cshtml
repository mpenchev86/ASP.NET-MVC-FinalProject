@using JustOrderIt.Web.Areas.Public.ViewModels.Products

@model List<CarouselData>

@{ 
    var controller = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
    var action = HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString();
    var area = HttpContext.Current.Request.RequestContext.RouteData.DataTokens["area"] != null
        ? HttpContext.Current.Request.RequestContext.RouteData.DataTokens["area"].ToString()
        : string.Empty;
}

@if (controller == "Home" && action == "Index" && area == Areas.PublicAreaName)
{
    <div id="myCarousel" class="carousel slide panel-collapse" data-ride="carousel">
        <!-- Indicators -->
        <ol class="carousel-indicators">
            @for (int i = 0; i < Model.Count; i++)
            {
                <li data-target="#myCarousel" data-slide-to="@i" @if(i == 0){ <text>class="active"</text> }></li>
            }
        </ol>
        <!-- Wrapper for slides -->
        <div class="carousel-inner" role="listbox">
            @for (int i = 0; i < Model.Count; i++)
            {
                <div class="item @if(i == 0){ <text>active</text> }">
                    <div class="row">
                        <div class="product-image">
                            <img src="@Url.ProductPicture(Model[i].ImageUrlPath, Model[i].ImageFileExtension, ImageSizes.Thumbnail)" alt="@Model[i].Title" />
                        </div>
                        <div class="product-title carousel-caption">
                            <h4>@(Model[i].Title)</h4>
                        </div>
                    </div>
                    @Html.ActionLink(" ", "Index", "Products", new { area = Areas.PublicAreaName, id = Model[i].EncodedId }, null)
                </div>
            }
        </div>
    </div>
}