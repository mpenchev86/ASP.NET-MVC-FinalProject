@using JustOrderIt.Web.Areas.Public.ViewModels.Votes

@model VoteEditorModel

@{ 
    var formId = string.Format("castvote-form-{0}", /*Model.ProductId*/(string)ViewData["identifier"]/*.ToString()*/);
}

@using (Ajax.BeginForm(
    "VoteForOrderItem",
    "Votes",
    new { ProductId = Model.ProductId, UserId = Model.UserId },
    new AjaxOptions()
    {
        HttpMethod = FormMethod.Post.ToString(),
        InsertionMode = InsertionMode.ReplaceWith,
        UpdateTargetId = formId,
        LoadingElementId = "ajax-loading-spinner",
        OnSuccess = "onCastVoteSuccess",
    },
    new { id = formId }
))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <div class="input-group">
        <button id="submit-vote" type="submit" style="display: none"></button>
        @*@Html.Hidden(string.Format("[{0}].ProductId", ((string)ViewData["identifier"])), Model.ProductId)*@
        @*@Html.HiddenFor(m => m.ProductId)*@
        @*@Html.HiddenFor(m => m.UserId)*@
        @Html.EditorFor(
            m => m.VoteValue,
            //"RatingEditor",
            //string.Format("OrderItems[{0}].UserId", ((string)ViewData["identifier"])),
            new
            {
                index = Model.ProductId,
                //inputName = string.Format("OrderItems[{0}].VoteValue", (string)ViewData["identifier"]),
                inputName = "VoteValue",
                htmlAttributes = new Dictionary<string, object> { { "title", string.Format("curent rating: {0:0.0}", Model.VoteValue) } }
            })
    </div>
}
